{{ reserveImport "github.com/rs/zerolog/log" }}

{{ $entity := .Field.TypeReference.Definition.Name | getEntityName  -}}
{{ $isOrgOwned := .Field | hasOwnerField  -}}

// grab preloads to set max result limits
graphutils.GetPreloads(ctx, r.maxResultLimit)

data, err := unmarshalBulkData[generated.Create{{ $entity }}Input](input)
if err != nil {
	log.Error().Err(err).Msg("failed to unmarshal bulk data")

	return nil, err
}

if len(data) == 0 {
    return nil, rout.NewMissingRequiredFieldError("input")
}

{{ if $isOrgOwned }}
// set the organization in the auth context if its not done for us
// this will choose the first input OwnerID when using a personal access token
if err := setOrganizationInAuthContextBulkRequest(ctx, data); err != nil {
    log.Error().Err(err).Msg("failed to set organization in auth context")

    return nil, rout.NewMissingRequiredFieldError("owner_id")
}
{{- end }}

return r.bulkCreate{{ $entity }}(ctx, data)