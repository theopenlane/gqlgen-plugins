{{ reserveImport "github.com/theopenlane/gqlgen-plugins/graphutils" }}

{{ $entity := .Field.TypeReference.Definition.Name | getEntityName  -}}

{{- if eq $entity "Node" }}

{{ $hasPlural := hasArgument "ids" .Field.FieldDefinition.Arguments }}

{{- if $hasPlural }}
res, err := withTransactionalMutation(ctx).Noders(ctx, ids)
{{- else }}
res, err := withTransactionalMutation(ctx).Noder(ctx, id)
{{- end }}
if err != nil {
	return nil, parseRequestError(err, action{action: ActionGet, object: "{{ $entity | toLower }}"})
}

return res, nil

{{- else }}

{{ $import := print $.EntImport "/" $entity | toLower }}
{{ reserveImport $import}}

query, err := withTransactionalMutation(ctx).{{ $entity }}.Query().Where({{ $entity | toLower }}.ID(id)).CollectFields(ctx)
if err != nil {
	return nil, parseRequestError(err, action{action: ActionGet, object: "{{ $entity | toLower }}"})
}

res, err := query.Only(ctx)
if err != nil {
	return nil, parseRequestError(err, action{action: ActionGet, object: "{{ $entity | toLower }}"})
}

return res, nil

{{- end }}